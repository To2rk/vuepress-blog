"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.upload = exports.request = void 0;
var adapter_utils_1 = require("@leancloud/adapter-utils");
var superagent = require("superagent");
function convertResponse(res) {
    return {
        ok: res.ok,
        status: res.status,
        headers: res.header,
        data: res.body,
    };
}
exports.request = function (url, options) {
    if (options === void 0) { options = {}; }
    var _a = options.method, method = _a === void 0 ? "GET" : _a, data = options.data, headers = options.headers, onprogress = options.onprogress, signal = options.signal;
    if (signal === null || signal === void 0 ? void 0 : signal.aborted) {
        return Promise.reject(new adapter_utils_1.AbortError("Request aborted"));
    }
    var req = superagent(method, url);
    if (headers) {
        req.set(headers);
    }
    if (onprogress) {
        req.on("progress", onprogress);
    }
    return new Promise(function (resolve, reject) {
        var abortListener = function () {
            reject(new adapter_utils_1.AbortError("Request aborted"));
            req.abort();
        };
        signal === null || signal === void 0 ? void 0 : signal.addEventListener("abort", abortListener);
        req
            .send(data)
            .then(function (res) { return resolve(convertResponse(res)); })
            .catch(function (err) {
            if (err.response) {
                resolve(convertResponse(err.response));
            }
            else {
                reject(err);
            }
        })
            .finally(function () { return signal === null || signal === void 0 ? void 0 : signal.removeEventListener("abort", abortListener); });
    });
};
exports.upload = function (url, file, options) {
    if (options === void 0) { options = {}; }
    var _a = options.method, method = _a === void 0 ? "POST" : _a, data = options.data, headers = options.headers, onprogress = options.onprogress, signal = options.signal;
    if (signal === null || signal === void 0 ? void 0 : signal.aborted) {
        return Promise.reject(new adapter_utils_1.AbortError("Request aborted"));
    }
    var req = superagent(method, url).attach(file.field, file.data, file.name);
    if (data) {
        req.field(data);
    }
    if (headers) {
        req.set(headers);
    }
    if (onprogress) {
        req.on("progress", onprogress);
    }
    return new Promise(function (resolve, reject) {
        var abortListener = function () {
            reject(new adapter_utils_1.AbortError("Request aborted"));
            req.abort();
        };
        signal === null || signal === void 0 ? void 0 : signal.addEventListener("abort", abortListener);
        req
            .then(function (res) { return resolve(convertResponse(res)); })
            .catch(function (err) {
            if (err.response) {
                resolve(convertResponse(err.response));
            }
            else {
                reject(err);
            }
        })
            .finally(function () { return signal === null || signal === void 0 ? void 0 : signal.removeEventListener("abort", abortListener); });
    });
};
//# sourceMappingURL=index.js.map