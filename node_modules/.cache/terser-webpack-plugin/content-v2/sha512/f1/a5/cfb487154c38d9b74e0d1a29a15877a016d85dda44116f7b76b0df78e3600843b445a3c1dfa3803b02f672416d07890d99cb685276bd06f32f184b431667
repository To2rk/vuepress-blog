{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[173],{757:function(t,s,r){\"use strict\";r.r(s);var a=r(10),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[r(\"p\",[t._v(\"最近在折腾 Cursor，发现官方好像把国内 IP 给限制了，用 Claude、OpenAI、Gemini 都会提示“区域不支持”。明明本机能科学上网，也能访问 Google，干嘛偏偏给我卡这一步？\")]),t._v(\" \"),r(\"p\",[t._v(\"折腾了好一阵子，终于找到个简单又稳定的“黑科技”解决方案~\")]),t._v(\" \"),r(\"h2\",{attrs:{id:\"一、前提条件\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、前提条件\"}},[t._v(\"#\")]),t._v(\" 一、前提条件\")]),t._v(\" \"),r(\"ol\",[r(\"li\",[t._v(\"你本机已经能访问 Google 的干净 IP（最好是美国节点）\")]),t._v(\" \"),r(\"li\",[t._v(\"科学上网要支持虚拟网卡或 TUN 模式（我这里用了 Clash/Trojan/V2Ray 之类的，能给本地启一个 socks5 代理就行）\")]),t._v(\" \"),r(\"li\",[t._v(\"本例中我假设 socks5 代理地址是：127.0.0.1:7891（你的端口自己改）\")])]),t._v(\" \"),r(\"h2\",{attrs:{id:\"二、具体操作步骤\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、具体操作步骤\"}},[t._v(\"#\")]),t._v(\" 二、具体操作步骤\")]),t._v(\" \"),r(\"ol\",[r(\"li\",[r(\"p\",[t._v(\"打开 Cursor 用户设置\")]),t._v(\" \"),r(\"ul\",[r(\"li\",[t._v(\"快捷键 \"),r(\"code\",[t._v(\"Ctrl+Shift+P\")])]),t._v(\" \"),r(\"li\",[t._v(\"输入 “user”\")]),t._v(\" \"),r(\"li\",[t._v(\"选中打开的 \"),r(\"code\",[t._v(\"settings.json\")]),t._v(\"（就是那个纯 JSON 格式的配置文件）\")])])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"在 JSON 里添加或修改下面几行：\")]),t._v(\" \"),r(\"div\",{staticClass:\"language-json line-numbers-mode\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[r(\"code\",[r(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"http.proxy\"')]),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"socks5://127.0.0.1:7891\"')]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"http.proxyStrictSSL\"')]),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"false\")]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\"),r(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v('\"http.proxySupport\"')]),r(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),r(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"on\"')]),r(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\")])]),t._v(\" \"),r(\"div\",{staticClass:\"line-numbers-wrapper\"},[r(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),r(\"br\"),r(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),r(\"br\"),r(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),r(\"br\")])]),r(\"p\",[t._v(\"解释一下：\")]),t._v(\" \"),r(\"ul\",[r(\"li\",[t._v(\"http.proxy：告诉 Cursor 用本地的 socks5 代理去访问外网\")]),t._v(\" \"),r(\"li\",[t._v(\"http.proxyStrictSSL：关闭严格证书校验，避免一些自签或中间人干预导致的连接失败\")]),t._v(\" \"),r(\"li\",[t._v(\"http.proxySupport：开启代理支持\")])])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"再去 Cursor 的 Network 设置里，把 HTTP compatibility Mode 改成 HTTP/1.1\")]),t._v(\" \"),r(\"ul\",[r(\"li\",[t._v(\"不改这个的话，Cursor 还是会走它默认的 HTTP/2/QUIC 路径，依旧会被识别成国内访问，报“区域不支持”\")]),t._v(\" \"),r(\"li\",[t._v(\"改成 HTTP/1.1 后，代理就能生效，流量全走 socks5，区域限制就绕过了\")])])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"重启 Cursor，然后随便调用一下 Claude、ChatGPT 或者 Gemini，就能正常访问了～\")]),t._v(\" \"),r(\"p\",[t._v(\"如果还报错，再检查一下代理是不是活着、端口对不对，以及本地科学上网配置有没有开虚拟网卡／tun 模式。\")])])]),t._v(\" \"),r(\"h2\",{attrs:{id:\"三、tips\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三、tips\"}},[t._v(\"#\")]),t._v(\" 三、Tips\")]),t._v(\" \"),r(\"ul\",[r(\"li\",[r(\"p\",[t._v(\"其实本质就是把 Cursor 默认的直连流量改成走本地代理，让它认不出你是“国内 IP”\")])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"如果你用的是 HTTP 代理（不是 socks5），可以类似地把 \"),r(\"code\",[t._v(\"http.proxy\")]),t._v(\" 换成 \"),r(\"code\",[t._v(\"http://127.0.0.1:端口\")]),t._v(\"。\")])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"一定要保证你的代理能解析并转发到 Google/Fastly/AWS 这些境外节点。否则会报超时或连不上。\")])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"这种方法理论上对其他依赖 HTTP/HTTPS 的插件也适用，给 VS Code 全局代理也能解决不少奇怪的网络问题\")])])]),t._v(\" \"),r(\"p\",[t._v(\"好了，这波操作我是亲测可行，还挺稳的\")])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}