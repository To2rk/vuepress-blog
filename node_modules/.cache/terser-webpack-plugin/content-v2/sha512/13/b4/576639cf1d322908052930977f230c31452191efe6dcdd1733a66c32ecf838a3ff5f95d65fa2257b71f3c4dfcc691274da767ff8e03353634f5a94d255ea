{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[189],{774:function(t,s,a){\"use strict\";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h2\",{attrs:{id:\"目的\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#目的\"}},[t._v(\"#\")]),t._v(\" 目的\")]),t._v(\" \"),a(\"p\",[t._v(\"存在一个\"),a(\"code\",[t._v(\"test.txt\")]),t._v(\"文本，内容为\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://conimi.com/files/images/screenshots/python-split-test-password.png\",alt:\"python-split-test-password\"}})]),t._v(\" \"),a(\"p\",[t._v(\"由于文本格式比较规范，第二列为密码，现在需要将所有行的第二列密码提取出来，并保存到另一个\"),a(\"code\",[t._v(\"password.txt\")]),t._v(\"文件。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"代码\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#代码\"}},[t._v(\"#\")]),t._v(\" 代码\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[t._v(\"file_test \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"open\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'test.txt'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"mode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'r'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"encoding\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'GBK'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\npassword \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"open\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'password.txt'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"mode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'a'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" line \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"in\")]),t._v(\" file_test\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"  \\n    x \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" line\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"split\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"----\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    password\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"write\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    password\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"write\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"\\\\n\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"print\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\npassword\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"close\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\nfile_test\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"close\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),a(\"br\")])]),a(\"h2\",{attrs:{id:\"总结-python3\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#总结-python3\"}},[t._v(\"#\")]),t._v(\" 总结(Python3)\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_1-open-函数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-open-函数\"}},[t._v(\"#\")]),t._v(\" 1. \"),a(\"code\",[t._v(\"open()函数\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"语法\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"open\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"file\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" mode\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'r'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" buffering\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" encoding\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"None\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" errors\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"None\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" newline\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"None\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" closefd\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"True\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" opener\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"None\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\")])]),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"常用参数说明\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"file:\")]),t._v(\" 必需，文件路径（相对或者绝对路径）。\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"mode:\")]),t._v(\"可选，文件打开模式\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"buffering:\")]),t._v(\"可选，设置缓冲\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"encoding:\")]),t._v(\"可选，文件编码格式\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"mode 参数有：\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"a：\")]),t._v(\"追加方式。若文件存在，新内容写入到已有内容之后；若文件不存在，则会创建新文件写入。\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"b：\")]),t._v(\"二进制方式。\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"r：\")]),t._v(\"只读方式。文件的指针将会放在文件的开头。\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"r+：\")]),t._v(\"可读可写。文件的指针将会放在文件的开头，若文件不存在，则会报错。\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"rb：\")]),t._v(\"以二进制格式打开的只读方式。文件的指针将会放在文件的开头,一般用于非文本文件如图片。\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"w：\")]),t._v(\"只写方式。若文件已存在，则从开头开始编辑，原有内容被删除；若该文件不存在，则创建新文件。\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"w+：\")]),t._v(\"可读可写。若文件已存在，则从开头开始编辑，原有内容被删除；若该文件不存在，则创建新文件。\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"wb+：\")]),t._v(\"以二进制格式打开的可读可写。若文件已存在，则从开头开始编辑，原有内容被删除；若该文件不存在，则创建新文件；一般用于非文本文件如图片。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"注意:\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"使用 open() 函数一定要保证关闭文件对象，即调用 close() 函数。\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_2-split-函数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-split-函数\"}},[t._v(\"#\")]),t._v(\" \"),a(\"strong\",[t._v(\"2. \"),a(\"code\",[t._v(\"split()函数\")])])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"语法\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"str\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"split\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"str\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" num\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"string\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"count\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"str\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\")])]),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"参数\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"str\")]),t._v(\"：分隔符，默认为所有的空字符，包括空格、换行(\\\\n)、制表符(\\\\t)等。\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"num\")]),t._v(\"：分割次数。默认为 -1, 即分隔所有。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"返回值\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"返回分割后的字符串列表。\")])])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"参考资料\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参考资料\"}},[t._v(\"#\")]),t._v(\" \"),a(\"strong\",[t._v(\"参考资料\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"Python3 open() 函数：\"),a(\"a\",{attrs:{href:\"http://www.runoob.com/python3/python3-func-open.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"http://www.runoob.com/python3/python3-func-open.html\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"li\",[t._v(\"Python3 split()方法：\"),a(\"a\",{attrs:{href:\"http://www.runoob.com/python3/python3-string-split.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"http://www.runoob.com/python3/python3-string-split.html\"),a(\"OutboundLink\")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}